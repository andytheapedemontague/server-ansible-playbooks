---

#Find temp password
- name: Get temporary MySQL root password
  shell: grep 'temporary password' {{ mysql_role.def_log }} | awk '{print $NF}'
  register: mysql_root_temp_password
  when: ansible_os_family == "RedHat"
  tags:
    - mysql

#Setting new ROOT password to CentOS
- name: Set the MySQL root password
  shell: mysqladmin -u root --password='{{ mysql_root_temp_password.stdout }}' password '{{ mysql.password }}'
  register: mysql.password_result
  when: mysql.password is defined and mysql.password != "" and ansible_os_family == "RedHat"
  tags:
    - mysql
   
- name: Set the MySQL root password
  mysql_user:
    login_host: '{{ "localhost" if (inventory_hostname == "127.0.0.1") else inventory_hostname }}'
    login_user: root
    # TODO: support non-empty root passwords, especially for remote hosts not on private networks
    # Currently, mysql_user will attempt to souce credentials from .my.cnf if present (see next task)
    # login_password: ''
    host_all: yes
    name: root
    password: '{{ mysql.password }}'
  when: ansible_os_family == "Debian"
  tags:
    - mysql

#Setting new ROOT password to authorization file
- name: setup MySQL password file
  template:
    src: root_my.cnf.j2
    dest: /root/.my.cnf
  when: mysql.password is defined and mysql.password != ""
  tags:
    - mysql

- name: removing empty password users
  mysql_user: 
    name: ""
    password: ""
    host: "{{ ansible_fqdn }}"
    priv: "*.*:USAGE"
    state: absent
    login_host: '{{ "localhost" if (inventory_hostname == "127.0.0.1") else inventory_hostname }}'
    login_user: root
  when: mysql.password is defined and mysql.password != ""
  tags:
    - mysql

- name: removing the MySQL test database
  mysql_db: 
    db: test 
    state: absent
    login_host: '{{ "localhost" if (inventory_hostname == "127.0.0.1") else inventory_hostname }}'
    login_user: root 
  tags:
    - mysql

- name: removing the MySQL preseed file
  file: 
    path=/root/mysql.seed 
    state=absent
  when: ansible_os_family == "Debian"
